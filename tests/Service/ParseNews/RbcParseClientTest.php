<?php

declare(strict_types=1);

namespace App\Tests\Service\ParseNews;

use App\Entity\Post;
use App\Service\ParseNews\AgroItem;
use App\Service\ParseNews\RbcParseClient;
use App\Service\ParseNews\RegularItem;
use App\Service\ParseNews\StyleItem;
use Doctrine\ORM\EntityManagerInterface;
use PHPHtmlParser\Dom;
use GuzzleHttp\Client;
use PHPUnit\Framework\TestCase;

class RbcParseClientTest extends TestCase
{
    private $dom;
    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->dom = new Dom();
    }

    public function tearDown(): void
    {
        parent::tearDown(); // TODO: Change the autogenerated stub
    }

    public function testRegular(): void
    {
        $link = 'https://www.rbc.ru/society/17/04/2020/5e9992469a79476c423416bd?from=newsfeed';

        $resDomContent = RbcParseClient::getUrlContent($link);
        $this->dom->load((string) $resDomContent);

        $currentNewsItem = new RegularItem($this->dom, $link);
        $currentNewsItem->parseNewsItem();

        $date = new \DateTime("now");
        $currentNewsItem->setDate($date);

        $this->assertNotNull($currentNewsItem->getBody());
        $this->assertIsString($currentNewsItem->getTitle());
        $this->assertIsString($currentNewsItem->getBody());
        $this->assertIsString($currentNewsItem->getLink());
        $this->assertInstanceOf(\DateTime::class, $currentNewsItem->getDate());
    }

    public function testStyle(): void
    {
        $link = 'https://style.rbc.ru/health/5e905ed79a7947b7bf9a6609';

        $resDomContent = RbcParseClient::getUrlContent($link);
        $this->dom->load((string) $resDomContent);

        $currentNewsItem = new StyleItem($this->dom, $link);
        $currentNewsItem->parseNewsItem();

        $date = new \DateTime("now");
        $currentNewsItem->setDate($date);

        $this->assertNotNull($currentNewsItem->getBody());
        $this->assertIsString($currentNewsItem->getTitle());
        $this->assertIsString($currentNewsItem->getBody());
        $this->assertIsString($currentNewsItem->getLink());
        $this->assertInstanceOf(\DateTime::class, $currentNewsItem->getDate());

    }

    public function testAgro(): void
    {
        $link = 'http://agrodigital.rbc.ru/?utm_source=rbc&utm_medium=main&utm_campaign=rsh20w-r-10mlrd-m';

        $resDomContent = RbcParseClient::getUrlContent($link);
        $this->dom->load((string) $resDomContent);

        $currentNewsItem = new AgroItem($this->dom, $link);
        $currentNewsItem->parseNewsItem();

        $date = new \DateTime("now");
        $currentNewsItem->setDate($date);

        $this->assertNotNull($currentNewsItem->getBody());
        $this->assertIsString($currentNewsItem->getTitle());
        $this->assertIsString($currentNewsItem->getBody());
        $this->assertIsString($currentNewsItem->getLink());
        $this->assertInstanceOf(\DateTime::class, $currentNewsItem->getDate());
    }
}